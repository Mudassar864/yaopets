1. Login/autenticação via cookie
Você mencionou que usa credentials: "include" no frontend, o que é correto. Vamos confirmar os pontos:

 O cookie de sessão está realmente sendo enviado nas requisições de curtir, salvar, e comentar?
→ Use o DevTools > Network > Headers e veja se o cookie de sessão (Set-Cookie, Cookie, etc.) aparece nas requisições de POST ou PATCH para /api/posts/:id/like e similares.

 O backend está lendo corretamente o cookie?
→ O middleware de autenticação (authMiddleware, isAuthenticated, etc.) está sendo aplicado nas rotas novas que você criou?

✅ 2. Rotas do Backend (Express)
Você ajustou as rotas, mas precisamos confirmar se elas estão assim:

ts
Copiar
Editar
// server/routes/posts.ts

router.post('/api/posts/:id/like', requireAuth, async (req, res) => {
  const postId = req.params.id;
  const userId = req.user.id;

  // Verifique se o post existe, insira ou remova do relacionamento
  await db.postInteractions.upsert({
    where: { userId_postId_type: { userId, postId, type: 'like' } },
    update: {},
    create: { userId, postId, type: 'like' },
  });

  res.status(200).json({ success: true });
});
Se a rota existe mas requireAuth não está funcionando direito, vai continuar retornando 401.

✅ 3. Verificação do Middleware de Autenticação
No Express, garanta que o middleware esteja corretamente aplicado. Exemplo básico:

ts
Copiar
Editar
function requireAuth(req, res, next) {
  if (!req) return res.status(401).json({ error: 'Not authenticated' });
  next();
}
Mas isso só funciona se você tiver um middleware ANTES disso que extrai o usuário do cookie, como:

ts
Copiar
Editar
app.use(async (req, res, next) => {
  const sessionToken = req.cookies['session'];
  if (sessionToken) {
    const user = await verifySession(sessionToken);
    if (user) req.user = user;
  }
  next();
});
Confirme que isso está ativo em app.ts ou server.ts.

✅ 4. Banco de Dados: Verificar Inserção
Se tudo acima estiver funcionando, então a inserção no banco vai acontecer. Você pode testar manualmente:

sql
Copiar
Editar
SELECT * FROM post_interactions ORDER BY created_at DESC LIMIT 10;
Se não aparecer nada, mas as requisições têm 200 OK, talvez o código de inserção esteja mal formatado ou falhando silenciosamente.

✅ 5. Logs:
Coloque um log dentro da rota para ter certeza de que ela está sendo chamada:

ts
Copiar
Editar
console.log('Like route hit by user:', req.user.id, 'on post:', req.params.id);
Se o log não aparecer, a requisição nem está chegando por causa da autenticação ou da rota incorreta.

✅ Resumo: Prioridade de Verificações
 Requisição no frontend está mandando o cookie?

 O middleware do backend está extraindo corretamente req.user?

 As rotas estão corretamente conectadas e usando requireAuth?

 Está tentando persistir no banco? Tem erro silencioso?

 Logs mostram a chegada da requisição e o userId?

