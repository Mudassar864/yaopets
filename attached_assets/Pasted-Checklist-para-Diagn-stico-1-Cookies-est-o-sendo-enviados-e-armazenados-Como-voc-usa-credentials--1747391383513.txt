Checklist para DiagnÃ³stico
1. Cookies estÃ£o sendo enviados e armazenados?
Como vocÃª usa credentials: "include", o backend precisa:

Estar no mesmo domÃ­nio (ou CORS bem configurado)

Ter Access-Control-Allow-Credentials: true

Configurar o cookie de sessÃ£o com:

ts
Copiar
Editar
res.cookie("token", token, {
  httpOnly: true,
  secure: true,
  sameSite: "lax", // ou "none" com HTTPS
  path: "/"
});
2. VerificaÃ§Ã£o via /api/auth/me estÃ¡ falhando
Verifique no console se este trecho:

ts
Copiar
Editar
const authCheckResponse = await fetch("/api/auth/me", {
  credentials: "include",
});
estÃ¡ retornando 401, 403 ou outro erro. Isso indica que o backend nÃ£o reconhece o cookie da sessÃ£o, mesmo apÃ³s o login.

3. Middleware de proteÃ§Ã£o redirecionando de volta para login
Se vocÃª tem algo como:

ts
Copiar
Editar
if (!session) return NextResponse.redirect("/auth/login");
e estÃ¡ sendo executado mesmo apÃ³s login, o motivo pode ser:

O middleware estÃ¡ rodando antes do cookie ser lido corretamente

VocÃª estÃ¡ sendo redirecionado de volta para o login automaticamente

4. O redirecionamento nÃ£o estÃ¡ funcionando
VocÃª usa:

ts
Copiar
Editar
window.location.href = baseUrl + '/welcome?t=' + Date.now();
Verifique:

Se a pÃ¡gina /welcome realmente existe

Se o redirecionamento nÃ£o estÃ¡ sendo bloqueado por um erro anterior

Se algo no middleware estÃ¡ bloqueando ou redirecionando novamente

5. Middleware do Next.js nÃ£o reconhece o cookie
Middleware do Next.js nÃ£o tem acesso ao cookie se o sameSite estiver mal configurado ou se estiver em subdomÃ­nios diferentes.

ğŸ§ª Teste rÃ¡pido
No navegador:

FaÃ§a login

VÃ¡ no DevTools â†’ aba "Application" â†’ Cookies

Veja se o cookie de sessÃ£o estÃ¡ presente

FaÃ§a uma requisiÃ§Ã£o manual para /api/auth/me com credentials: include

ts
Copiar
Editar
fetch("/api/auth/me", { credentials: "include" }).then(r => r.json())
Se retornar o usuÃ¡rio, o problema Ã© no redirecionamento ou middleware

Se retornar erro, o cookie nÃ£o foi salvo ou nÃ£o estÃ¡ sendo lido corretamente

ğŸ’¡ PossÃ­vel soluÃ§Ã£o de redirecionamento fantasma
No seu cÃ³digo, vocÃª jÃ¡ faz isso:

ts
Copiar
Editar
window.location.href = baseUrl + '/welcome?t=' + Date.now();
Isso estÃ¡ certo. Mas se /welcome tiver um middleware que depende da sessÃ£o, vocÃª precisa garantir que:

O cookie de sessÃ£o estÃ¡ sendo enviado na primeira requisiÃ§Ã£o ao /welcome

O middleware nÃ£o esteja interferindo de forma prematura

Se quiser, posso revisar tambÃ©m seu middleware (middleware.ts) ou o handler de /api/auth/login. Ã‰ ali que normalmente estÃ¡ o problema.

Me envie esses arquivos que te mostro onde ajusta